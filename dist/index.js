(()=>{var d=1024,c=100,l=class{constructor(e,t){this.options={};this.#e={};this.set=(e,t)=>{e&&(this.url=e),t&&(this.options=t)};this.get=(e="/")=>{let t={action:"get",payload:{path:e}};this.send(t)};this.load=async(e,t)=>{this.set(e,t);let o=this.options.LRUSize??c,r=this.options.requestChunkSize??d;return this.send({action:"load",payload:{url:this.url,LRUSize:o,requestChunkSize:r}})};this.send=e=>new Promise(t=>{let o=Math.random().toString(36).substring(7);this.#e[o]=t,e.lazyFileProxyId=o,console.log("Worker",this.worker),this.worker.postMessage(e)});if(this.set(e,t),window&&window.Worker){let o=new Worker("./dist/adv_worker.js");this.worker=o,console.log("Got worker",o),this.worker.addEventListener("message",r=>{console.log("EVENT:",r),console.log("GOT",r.data,this.#e[r.data]);let i=this.#e[r.data.lazyFileProxyId];i?i(r.data):console.error("Message was not awaited...")})}else console.log("Workers are not supported")}#e},a=l;var u=new a;document.getElementById("load").onclick=function(){let n=document.getElementById("file_url").value,e=parseInt(document.getElementById("LRUSize").value,10),t=parseInt(document.getElementById("requestChunkSize").value,10);u.load(n,{LRUSize:e,requestChunkSize:t}).then(()=>{console.log("RESOLVED!");let o=document.getElementById("results");o.innerHTML="";let r=JSON.stringify(event.data,(i,s)=>typeof s=="bigint"?s.toString():ArrayBuffer.isView(s)?[...s]:s,2);o.innerText=r})};document.getElementById("get").onclick=async function(){let n=document.getElementById("path").value;u.get(n)};})();
